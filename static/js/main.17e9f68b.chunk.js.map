{"version":3,"sources":["components/movieItem.js","components/MovieTabs.js","components/MoviePage.js","App.js","utils/Api.js","serviceWorker.js","index.js"],"names":["FadeIn","styled","div","keyframes","fadeIn","MovieItem","update_ClassName","classNames","state","willWatch","update_WillWatch","data","props","removeMovieFrom_willWatch","willWatchMovie","setState","update_Image","value","item","moviesDataResult","this","moviesDataProps","className","src","poster_path","rel","alt","title","vote_average","onClick","removeMovie","bind","React","Component","MovieTabs","prevProps","prevState","sort_by","updateSort_By","getClass","MoviePage","page","total_pages","update_Page","style","fontSize","justifyContent","FadeInRightBig","fadeInRightBig","App","getMovies","fetch","then","response","json","movieSData","results","addWillWatchMovie","willWatchData","push","updatesMovies","filter","index","id","updatesMoviesWillWatch","result_page","StrictMode","map","key","length","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.17e9f68b.chunk.js","sourcesContent":["import React from 'react'\r\nimport classNames from 'classnames'\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { fadeIn } from \"react-animations\"\r\n\r\nconst FadeIn = styled.div`animation: 2s ${keyframes`${fadeIn}`}`;\r\n\r\nclass MovieItem extends React.Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            willWatch: false\r\n        }\r\n    }\r\n\r\n    update_ClassName = () => {\r\n        return classNames({\r\n            'btn': true,\r\n            'btn-light': !this.state.willWatch,\r\n            'btn-success': this.state.willWatch\r\n        })\r\n    }\r\n\r\n    update_WillWatch = (data) => {\r\n        if (this.state.willWatch) {\r\n            this.props.removeMovieFrom_willWatch(data)\r\n        }\r\n        if (!this.state.willWatch) {\r\n            this.props.willWatchMovie(data)\r\n        }\r\n        this.setState({ willWatch: !this.state.willWatch })\r\n    }\r\n\r\n    update_Image = (value, item) => {\r\n        if (value !== null) {\r\n            return `https://image.tmdb.org/t/p/w500${value}`\r\n        }\r\n        else {\r\n            return `not-found.png`\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let moviesDataResult = { ...this.props.moviesDataProps }\r\n        return (\r\n            <FadeIn className='col-sm-12 col-md-12 col-lg-6 col-xl-4' >\r\n                <div className=\"card m-2 bg-light\">\r\n                    <div className=\"card-body\">\r\n                        <img className='card-img-top card-img' src={this.update_Image(moviesDataResult.poster_path)} rel=\"nofollow\" alt={moviesDataResult.title} />\r\n                        <p className=\"card-header text-center text-dark card-title\">{moviesDataResult.title}</p>\r\n                        <div className=\"col-12 text-center\"><p className=\"text-secondary mt-2\">Rate: {moviesDataResult.vote_average}</p></div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-12 col-md-6 text-center mt-2\">\r\n                                <button className=\"btn btn-dark\" onClick={this.props.removeMovie.bind(this, moviesDataResult)}>Delete Movie</button>\r\n                            </div>\r\n                            <div className=\"col-sm-12 col-md-6 text-center mt-2\">\r\n                                <button className={this.update_ClassName()} onClick={this.update_WillWatch.bind(this, moviesDataResult)}>{this.state.willWatch ? 'Remove Will Watch' : 'Will Watch'}</button>\r\n                            </div>\r\n                        </div>\r\n                    </div >\r\n                </div >\r\n            </FadeIn>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieItem","import React from 'react'\r\nimport classNames from 'classnames'\r\n\r\nclass MovieTabs extends React.Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {}\r\n    }\r\n\r\n    shouldComponentUpdate(prevProps, prevState) {\r\n        if (this.props.sort_by !== prevProps.sort_by) {\r\n            return true\r\n        }\r\n        else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { sort_by, updateSort_By } = this.props\r\n        const getClass = (value) => {\r\n            return classNames({\r\n                'btn': true,\r\n                'btn-success': value === sort_by\r\n            })\r\n        }\r\n        return (\r\n            <div className=\"col-sm-12 col-md-6 row\">\r\n                <div className=\"col-sm-4 col-md-3\"><button className={getClass('popularity.desc')} onClick={updateSort_By.bind(this, 'popularity.desc')}>Popularity Desc</button></div>\r\n                <div className=\"col-sm-4 col-md-3\"><button className={getClass('revenue.desc')} onClick={updateSort_By.bind(this, 'revenue.desc')}>Revenue Desc</button></div>\r\n                <div className=\"col-sm-4 col-md-4\"><button className={getClass('vote_avarage.desc')} onClick={updateSort_By.bind(this, 'vote_avarage.desc')}>Vote Avarage Desc</button></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieTabs","import React from 'react'\r\n\r\nclass MoviePage extends React.Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        let { page, total_pages, update_Page } = this.props\r\n        return (\r\n            <div className=\"col-12 container text-center row\">\r\n                <div className=\"col-4 text-center-block text-hide\">Current page: {page}</div>\r\n                <div className=\"col-4 row container-fluid\">\r\n                    <button className=\"btn btn-danger col-2 text-center\" onClick={update_Page.bind(this, 'prev')}>Prev</button>\r\n                    <div className=\"col-4 text-center-block ml-2 mr-2\"><span className=\"pr-1 text-danger\" style={{ fontSize: '23px' }}>{page}</span><span className=\"pr-1\" style={{ fontSize: '17px' }}>{page + 1}</span> <span className=\"pr-1\" style={{ fontSize: '13px' }}> {page + 2} </span> <span className=\"pr-1\" style={{ fontSize: '7px' }}> {page + 3} </span> <span className=\"pr-1\" style={{ fontSize: '4px' }}> {page + 4} </span></div>\r\n                    <button className=\"btn btn-danger col-2 text-center\" onClick={update_Page.bind(this, 'next')}>Next</button>\r\n                </div>\r\n                <div className=\"col-4 text-center-block\" style={{ justifyContent: 'flex-start' }}>Total pages: <span className=\"text-danger pl-2\"> {total_pages}</span></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MoviePage","import React from 'react';\nimport './App.css';\nimport MovieItem from './components/movieItem'\nimport MovieTabs from './components/MovieTabs'\nimport MoviePage from './components/MoviePage'\nimport { API_URL, API_KEY_3 } from './utils/Api'\nimport styled, { keyframes } from 'styled-components';\nimport { fadeInRightBig } from \"react-animations\"\n\nconst FadeInRightBig = styled.div`animation: 1.5s ${keyframes`${fadeInRightBig}`}`;\n\nclass App extends React.Component {\n  constructor() {\n    super()\n\n    this.state = {\n      movieSData: [],\n      willWatchData: [],\n      sort_by: 'popularity.desc',\n      page: 1,\n      total_pages: 0\n    }\n  }\n\n  componentDidMount() {\n    this.getMovies()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.sort_by !== this.state.sort_by || prevState.page !== this.state.page) {\n      this.getMovies()\n    }\n  }\n\n  getMovies = () => {\n    return fetch(`${API_URL}/discover/movie?api_key=${API_KEY_3}&sort_by=${this.state.sort_by}&page=${this.state.page}`).then((response) => {\n      return response.json()\n    }).then((data) => {\n      this.setState({ movieSData: data.results, page: data.page, total_pages: data.total_pages })\n    })\n  }\n\n  willWatchMovie = (data, item) => {\n    let addWillWatchMovie = [...this.state.willWatchData]\n    addWillWatchMovie.push(data)\n\n    this.setState({ willWatchData: addWillWatchMovie })\n  }\n\n  removeMovieFrom_willWatch = (data, item) => {\n    let updatesMovies = this.state.willWatchData.filter((item, index) => {\n      return item.id !== data.id\n    })\n\n    this.setState({ willWatchData: updatesMovies })\n  }\n\n  removeMovie = (data, item) => {\n    let updatesMovies = this.state.movieSData.filter((item, index) => {\n      return item.id !== data.id\n    })\n\n    let updatesMoviesWillWatch = this.state.willWatchData.filter((item, index) => {\n      return item.id !== data.id\n    })\n\n    this.setState({ movieSData: updatesMovies, willWatchData: updatesMoviesWillWatch })\n  }\n\n  updateSort_By = (value) => {\n    this.setState({ sort_by: value, page: 1 })\n  }\n\n  update_Page = (value) => {\n    let result_page = 0;\n    if (value === 'prev') {\n      if (this.state.page !== 1) {\n        result_page = this.state.page - 1\n        this.setState({ page: result_page })\n      }\n      else {\n        return false\n      }\n    }\n    if (value === 'next') {\n      if (this.state.page !== 500) {\n        result_page = this.state.page + 1\n        this.setState({ page: result_page })\n      }\n      else {\n        return false\n      }\n    }\n  }\n\n  render() {\n    return (\n      <React.StrictMode>\n        <div className=\"col-12 container-fluid mb-4 row pt-4 pb-4 tabs-block\">\n          <MovieTabs sort_by={this.state.sort_by} updateSort_By={this.updateSort_By} />\n        </div>\n        <div className=\"col-12 container row\">\n          <div className=\"col-9 row\">\n            {this.state.movieSData.map((item, index) => {\n              return <MovieItem moviesDataProps={item} key={item.id} willWatchMovie={this.willWatchMovie} removeMovieFrom_willWatch={this.removeMovieFrom_willWatch} removeMovie={this.removeMovie} />\n            })}\n          </div>\n          <FadeInRightBig className=\"col-3\">\n            <p className=\"mt-4 border-bottom text-danger\" style={{ fontSize: '18px' }}>Will Watch: {this.state.willWatchData.length}</p>\n            {this.state.willWatchData.map((item, index) => {\n              return (\n                <div className=\"card mb-4\" key={index}>\n                  <img className=\"card-img-top card-img\" src={`https://image.tmdb.org/t/p/w500${item.poster_path}`} alt={item.title} />\n                  <div className=\"card-body\">\n                    <p className=\"card-title text-center card-header text-dark\">{item.title}</p>\n                    <p className=\"mt-2 text-center text-secondary\">Rate: {item.vote_average}</p>\n                  </div>\n                </div>)\n            })}\n          </FadeInRightBig>\n        </div>\n        <div className=\"col-12 container-fluid mt-4 row pt-4 pb-4 movie-page\">\n          <MoviePage page={this.state.page} total_pages={this.state.total_pages} update_Page={this.update_Page} />\n        </div>\n      </React.StrictMode >\n    )\n  }\n}\n\nexport default App;\n","export const API_URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const API_KEY_3 = \"3f4ca4f3a9750da53450646ced312397\";\r\n\r\nexport const API_KEY_4 =\r\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZjRjYTRmM2E5NzUwZGE1MzQ1MDY0NmNlZDMxMjM5NyIsInN1YiI6IjVhYzlmNWRkOTI1MTQxNjJhZTA1Njk0NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Fc4f9DVB6pFWh6hIjYe0NCC4pImdmNzDIfi_3Nb3tC4\";\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}